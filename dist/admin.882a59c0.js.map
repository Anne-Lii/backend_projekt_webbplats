{"mappings":"AAAA,yCAAyC;AACzC;AAEA,MAAM,UAAU;AAChB,MAAM,WAAW;AAEjB,SAAS,gBAAgB,CAAC,oBAAoB;IAE1C,4BAA4B;IAC5B,SAAS,cAAc,CAAC,kBAAkB,gBAAgB,CAAC,SAAS,SAAS,KAAK;QAC9E,MAAM,cAAc;QACpB,WAAW,SAAS;IACxB;IAEG,8BAA8B;IAC9B,SAAS,cAAc,CAAC,oBAAoB,gBAAgB,CAAC,SAAS,SAAS,KAAK;QACnF,MAAM,cAAc;QACpB,WAAW,UAAU;IACzB;IAEA,SAAS,WAAW,GAAG,EAAE,IAAI;QACzB,MAAM,KACD,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;YACF,+BAA+B;YAC/B,MAAM,aAAa;gBAAC;gBAAY;gBAAY;gBAAQ;gBAAa;gBAAW;gBAAM;aAAe;YACjG,MAAM,kBAAkB,CAAC;YAEzB,wCAAwC;YACxC,WAAW,OAAO,CAAC,CAAA;gBACf,eAAe,CAAC,SAAS,GAAG,EAAE;YAClC;YAEA,gDAAgD;YAChD,KAAK,OAAO,CAAC,CAAA;gBACT,IAAI,WAAW,QAAQ,CAAC,KAAK,QAAQ,CAAC,WAAW,KAC7C,eAAe,CAAC,KAAK,QAAQ,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC;YAE1D;YAEA,yBAAyB;YACzB,WAAW,OAAO,CAAC,CAAA;gBACf,UAAU,eAAe,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,SAAS,OAAO,CAAC,KAAK,KAAK,KAAK,CAAC;YACrF;QAEJ,GACC,KAAK,CAAC,CAAA;YACH,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,KAAK,OAAO,CAAC,EAAE;QACnD;IACR;IAEA,SAAS,UAAU,KAAK,EAAE,OAAO;QAC7B,MAAM,QAAQ,SAAS,cAAc,CAAC;QACtC,MAAM,YAAY,MAAM,oBAAoB,CAAC,QAAQ,CAAC,EAAE;QACxD,UAAU,SAAS,GAAG;QAEtB,MAAM,OAAO,CAAC,CAAA;YACV,MAAM,MAAM,UAAU,SAAS;YAC/B,MAAM,eAAe,IAAI,UAAU,CAAC;YACpC,MAAM,WAAW,IAAI,UAAU,CAAC;YAChC,MAAM,kBAAkB,IAAI,UAAU,CAAC;YACvC,MAAM,YAAY,IAAI,UAAU,CAAC;YACjC,MAAM,WAAW,IAAI,UAAU,CAAC;YAChC,MAAM,aAAa,IAAI,UAAU,CAAC;YAElC,aAAa,WAAW,GAAG,KAAK,QAAQ;YACxC,SAAS,WAAW,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK;YAC9C,gBAAgB,WAAW,GAAG,KAAK,WAAW;YAC9C,UAAU,WAAW,GAAG,KAAK,KAAK;YAElC,MAAM,aAAa,SAAS,aAAa,CAAC;YAC1C,WAAW,SAAS,GAAG;YACvB,WAAW,OAAO,GAAG,IAAM,SAAS,KAAK,EAAE,EAAE,KAAK,QAAQ;YAC1D,SAAS,WAAW,CAAC;YAErB,MAAM,eAAe,SAAS,aAAa,CAAC;YAC5C,aAAa,SAAS,GAAG;YACzB,aAAa,OAAO,GAAG,IAAM,WAAW,KAAK,EAAE,EAAE,KAAK,QAAQ;YAC9D,WAAW,WAAW,CAAC;QAC3B;QAEA,yCAAyC;QACzC,MAAM,KAAK,CAAC,OAAO,GAAG;IAC1B;IAEA,SAAS,SAAS,EAAE;QAChB,yCAAyC;QACzC,QAAQ,GAAG,CAAC,mBAAmB;IACnC;IAEA,SAAS,WAAW,EAAE;QAClB,2CAA2C;QAC3C,QAAQ,GAAG,CAAC,qBAAqB;IACrC;AAEJ","sources":["src/js/admin.js"],"sourcesContent":["//code written by Anne-Lii Hansen VT 2024\r\n\"use strict\";\r\n\r\nconst foodUrl = \"https://backend-projekt-api-2zmb.onrender.com/api/foods\";\r\nconst drinkUrl = \"https://backend-projekt-api-2zmb.onrender.com/api/drink\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    //Link to show and edit food\r\n    document.getElementById('link_edit_food').addEventListener('click', function(event) {\r\n        event.preventDefault();\r\n        fetchItems(foodUrl, \"food\");\r\n    });\r\n\r\n       //Link to show and edit drinks\r\n       document.getElementById('link_edit_drinks').addEventListener('click', function(event) {\r\n        event.preventDefault();\r\n        fetchItems(drinkUrl, \"drink\");\r\n    });\r\n\r\n    function fetchItems(url, type) {\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Sortera data enligt kategori\r\n                const categories = [\"VITT VIN\", \"RÖTT VIN\", \"ROSÉ\", \"CHAMPAGNE\", \"DRINKAR\", \"ÖL\", \"ALKOHOLFRITT\"];\r\n                const itemsByCategory = {};\r\n\r\n                // Skapa en tom lista för varje kategori\r\n                categories.forEach(category => {\r\n                    itemsByCategory[category] = [];\r\n                });\r\n\r\n                // Sortera varje dryck i sin respektive kategori\r\n                data.forEach(item => {\r\n                    if (categories.includes(item.category.toUpperCase())) {\r\n                        itemsByCategory[item.category.toUpperCase()].push(item);\r\n                    }\r\n                });\r\n\r\n                // Rita ut varje kategori\r\n                categories.forEach(category => {\r\n                    drawItems(itemsByCategory[category], `${type}_${category.replace(\" \", \"_\")}Table`);\r\n                });\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.error(`Error fetching ${type} items:`, error);\r\n            });\r\n    }\r\n\r\n    function drawItems(items, tableId) {\r\n        const table = document.getElementById(tableId);\r\n        const tableBody = table.getElementsByTagName('tbody')[0];\r\n        tableBody.innerHTML = '';\r\n\r\n        items.forEach(item => {\r\n            const row = tableBody.insertRow();\r\n            const cellCategory = row.insertCell(0);\r\n            const cellName = row.insertCell(1);\r\n            const cellDescription = row.insertCell(2);\r\n            const cellPrice = row.insertCell(3);\r\n            const cellEdit = row.insertCell(4);\r\n            const cellDelete = row.insertCell(5);\r\n\r\n            cellCategory.textContent = item.category;\r\n            cellName.textContent = item.food || item.drink;\r\n            cellDescription.textContent = item.description;\r\n            cellPrice.textContent = item.price;\r\n\r\n            const editButton = document.createElement('button');\r\n            editButton.className = 'btn btn-edit';\r\n            editButton.onclick = () => editItem(item.id, item.category);\r\n            cellEdit.appendChild(editButton);\r\n\r\n            const deleteButton = document.createElement('button');\r\n            deleteButton.className = 'btn btn-delete';\r\n            deleteButton.onclick = () => deleteItem(item.id, item.category);\r\n            cellDelete.appendChild(deleteButton);\r\n        });\r\n\r\n        // Visa tabellen efter att den har fyllts\r\n        table.style.display = 'table';\r\n    }\r\n\r\n    function editItem(id) {\r\n        // Implement edit food item functionality\r\n        console.log('Edit food item:', id);\r\n    }\r\n\r\n    function deleteItem(id) {\r\n        // Implement delete food item functionality\r\n        console.log('Delete food item:', id);\r\n    }\r\n\r\n});\r\n"],"names":[],"version":3,"file":"admin.882a59c0.js.map","sourceRoot":"/__parcel_source_root/"}